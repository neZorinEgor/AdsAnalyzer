version: "3.9"

services:
  s3:
    container_name: s3
    image: localstack/localstack:latest
    ports:
      - ${EDGE_PORT}:${EDGE_PORT}
    volumes:
      - localstack-data:/var/lib/localstack
    env_file:
      - .env

  redis:
    image: redis:8.0-M02-bookworm
    container_name: redis
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 3

  mysql:
    image: mysql:9.1.0
    container_name: mysql
    env_file:
      - .env
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 15s
      timeout: 15s
      retries: 4
    depends_on:
      redis:
        condition: service_healthy

#  backend:
#    container_name: backend
#    env_file:
#      - .env
#    ports:
#      - ${APP_PORT}:${APP_PORT}
#    command: bash -c "alembic upgrade head && uvicorn src.main:app --host ${APP_HOST} --port ${APP_PORT}"
#    build:
#      context: .
#      dockerfile: Dockerfile
#    depends_on:
#      mysql:
#        condition: service_healthy

#  celery_worker:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: celery_worker
#    command: celery -A src.auth.service:celery worker --loglevel=info
#    depends_on:
#      trainme:
#         condition: service_healthy
#    healthcheck:
#      test: [ "CMD", "celery", "-A", "src.auth.service:celery", "status" ]
#      interval: 10s
#      timeout: 10s
#      retries: 3

#  flower:
#    image: mher/flower:2.0
#    container_name: flower
#    command: celery -A celery flower --basic-auth=${FLOWER_USERNAME}:${FLOWER_PASSWORD} --worker -celery_worker
#    volumes:
#      - /src/auth/service
#    restart: always
#    ports:
#      - ${FLOWER_PORT}:${FLOWER_PORT}
#    environment:
#      CELERY_BROKER_URL: redis://${REDIS_HOST}:${REDIS_PORT}
#      CELERY_RESULT_BACKEND: redis://${REDIS_HOST}:${REDIS_PORT}
#    healthcheck:
#      test: [ "CMD", "celery", "-A", "celery", "status" ]
#      interval: 10s
#      timeout: 10s
#      retries: 3
#    depends_on:
#      celery_worker:
#        condition: service_healthy
#
#  nginx:
#    image: nginx:latest
#    container_name: nginx
#    restart: always
#    depends_on:
#      trainme:
#        condition: service_healthy
#    ports:
#      - ${NGINX_HTTP_PORT}:${NGINX_HTTP_PORT}
#    volumes:
#      - ./nginx/conf.d:/etc/nginx/conf.d

volumes:
  localstack-data:
