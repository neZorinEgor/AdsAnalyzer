import os
import sqlite3
import webbrowser
import streamlit as st
from yandexid import YandexOAuth, YandexID

from settings import settings

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è YandexOAuth
yandex_oauth = YandexOAuth(
    client_id=settings.CLIENT_ID,
    client_secret=settings.CLIENT_SECRET,
    redirect_uri=settings.REDIRECT_URI
)
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect("./sqlite/users.db", check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute("""
CREATE TABLE IF NOT EXISTS users (
    user_id TEXT PRIMARY KEY,
    token TEXT,
    username TEXT,
    email TEXT
)
""")
conn.commit()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ø–Ω–¥–µ–∫—Å
def open_yandex_page_with_token():
    webbrowser.open(yandex_oauth.get_authorization_url())


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def save_user_data(user_id, token, username, email):
    cursor.execute("""
    INSERT OR REPLACE INTO users (user_id, token, username, email)
    VALUES (?, ?, ?, ?)
    """, (user_id, token, username, email))
    conn.commit()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_user_data(user_id):
    cursor.execute("SELECT token, username, email FROM users WHERE user_id = ?", (user_id,))
    return cursor.fetchone()


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state
if "user_id" not in st.session_state:
    st.session_state.user_id = "user123"
if "token" not in st.session_state:
    st.session_state.token = None
if "username" not in st.session_state:
    st.session_state.username = None
if "email" not in st.session_state:
    st.session_state.email = None

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
user_data = get_user_data(st.session_state.user_id)
if user_data:
    st.session_state.token, st.session_state.username, st.session_state.email = user_data

print(get_user_data(st.session_state.user_id))

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.write("# üì∞ AdsCompanyAnalyzer")
st.divider()

# –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if not st.session_state.token:
    st.button("Get Yandex OAuth-token", on_click=open_yandex_page_with_token)
    secret = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥:")

    if secret:
        try:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –ø–æ –∫–æ–¥—É
            token = yandex_oauth.get_token_from_code(secret).access_token
            yandex_id = YandexID(token)
            user_payload = yandex_id.get_user_info_json()

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ session_state –∏ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            st.session_state.token = token
            st.session_state.username = user_payload.first_name
            st.session_state.email = user_payload.default_email
            save_user_data(st.session_state.user_id, token, user_payload.first_name, user_payload.default_email)

            st.success("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
else:
    # –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    st.write(f"üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: **{st.session_state.username}**")
    st.write(f"üìß –ü–æ—á—Ç–∞: **{st.session_state.email}**")

# –°—Å—ã–ª–∫–∞ –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
st.page_link("pages/1_üìà_Analyzer.py", label="–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—é", icon="üìà")
