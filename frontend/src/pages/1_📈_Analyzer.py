import pandas as pd
import requests
import streamlit as st

st.set_page_config(
    page_title="Analyzer",
    page_icon="üìà",
)

with st.sidebar:
    st.write("–¢—É—Ç –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞, –ø–æ–∫–∞ —á—Ç–æ –ª–µ–Ω—å.")


def upload_file_into_server():
    if upload_file is None:
        st.warning("Please, select file.", icon="‚ö†Ô∏è")
    else:
        try:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            files = {'company_df': (upload_file.name, upload_file, 'application/json')}
            response = requests.post(
                'http://localhost:8001/ads/upload',
                headers={'accept': 'application/json'},
                files=files
            )
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            if response.status_code == 200:
                st.success("File uploaded successfully!", icon="‚úÖ")
                response_data = response.json()
                # st.json(response_data)
                # cluster_img = response_data["cluster_image_ling"]
                num_clusters = response_data["optimal_cluster"]
                bad_segments = response_data["bad_company_segments"]
                scatter_data = pd.read_json(response_data["scatter_data"])
                scatter_data["cluster_id"] = scatter_data["cluster_id"].astype(str)
                st.write("# –û—Ç—á—ë—Ç –ø–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏")
                st.write(f"–ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏–∑–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–ª **{num_clusters} –∫–ª–∞—Å—Ç–µ—Ä–æ–≤** —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –ø–æ —Å—Ö–æ–∂–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º.")
                st.write("### –ù–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã")
                st.write("–í —Ö–æ–¥–µ –∞–Ω–∞–ª–∏–∑–∞ –±—ã–ª–∏ –≤—ã—è–≤–ª–µ–Ω—ã —Å–µ–≥–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç –Ω–∏–∑–∫—É—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–∫–∞–∑ —Ä–µ–∫–ª–∞–º—ã –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤:")
                bad_segments_formatted = "\n".join([f"* {segment}" for segment in bad_segments])
                st.write(bad_segments_formatted)
                st.write("### –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Ç–µ—Ä–æ–≤")
                # st.image(cluster_img)
                st.scatter_chart(data=scatter_data, x="0", y="1", color="cluster_id", x_label="–ü–µ—Ä–≤–∞—è –≥–ª–∞–≤–Ω–∞—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞", y_label="–í—Ç–æ—Ä–∞—è –≥–ª–∞–≤–Ω–∞—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞")
                st.write("**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:** –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–Ω—ã—Ö –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç –∏ –ø–æ–≤—ã—Å–∏—Ç—å –æ–±—â—É—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞–º–ø–∞–Ω–∏–∏.")
            else:
                st.error(f"Failed to upload file. Status code: {response.status_code}", icon="‚ùå")
        except Exception as e:
            st.error(f"An error occurred: {e}")


st.write("# ‚öôÔ∏è AutoML")
st.write("Upload your company stat from yandex and get analysis!")
upload_file = st.file_uploader("Upload company statistic")
st.button("Upload", on_click=upload_file_into_server)


