version: "3"

services:
  rabbitmq:
    image: rabbitmq:4.0.3-management
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3

#  redis:
#    image: redis:8.0-M02-bookworm
#    container_name: redis
#    env_file:
#      - notify/.env
#    expose:
#      - ${REDIS_PORT}
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 5s
#      timeout: 5s
#      retries: 3

  auth_mysql:
    image: mysql:9.1.0
    container_name: auth_mysql
    env_file:
      - ./auth/.env
    expose:
      - ${MYSQL_PORT}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 15s
      timeout: 15s
      retries: 4
    depends_on:
      rabbitmq:
        condition: service_healthy

  auth:
    container_name: auth
    env_file:
      - ./auth/.env
    build:
      context: auth
      dockerfile: Dockerfile
    command: bash -c "alembic upgrade head && uvicorn src.main:app --host ${APPS_HOST} --port ${AUTH_PORT}"
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    depends_on:
      auth_mysql:
        condition: service_healthy

#  notification:
#    container_name: notify
#    env_file:
#      - notify/.env
#    build:
#      context: notify
#      dockerfile: Dockerfile
#    command: bash -c "uvicorn src.main:app --host ${APPS_HOST} --port ${NOTIFICATIONS_PORT}"
#    ports:
#      - ${NOTIFICATIONS_PORT}:${NOTIFICATIONS_PORT}
#    depends_on:
#      redis:
#        condition: service_healthy
#
#  gateway:
#    container_name: gateway
#    env_file:
#      - gateway/.env
#    build:
#      context: gateway
#      dockerfile: Dockerfile
#    command: bash -c "uvicorn src.main:app --host ${APPS_HOST} --port ${GATEWAY_PORT}"
#    ports:
#      - ${GATEWAY_PORT}:${GATEWAY_PORT}
#
  celery_worker:
    build:
      context: auth
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A src.core.service:celery worker --loglevel=info
    depends_on:
      auth_mysql:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "celery", "-A", "src.core.service:celery", "status" ]
      interval: 10s
      timeout: 10s
      retries: 3

#  flower:
#    image: mher/flower:2.0
#    container_name: flower
#    command: celery -A celery flower --basic-auth=${FLOWER_USERNAME}:${FLOWER_PASSWORD} --worker -celery_worker
#    volumes:
#      - /auth/src/core/service
#    restart: always
#    ports:
#      - ${FLOWER_PORT}:${FLOWER_PORT}
#    healthcheck:
#      test: [ "CMD", "celery", "-A", "celery", "status" ]
#      interval: 10s
#      timeout: 10s
#      retries: 3
#    depends_on:
#      celery_worker:
#        condition: service_healthy
#
##  localstack:
##    image: localstack/localstack:latest
##    container_name: localstack
##    env_file:
##      - .env.example
##    ports:
##      - ${S3_PORT}:${S3_PORT}
##    environment:
##      - SERVICES=s3
##      - DEFAULT_REGION=us-east-1
##      - AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY}
##      - AWS_SECRET_ACCESS_KEY=${S3_SECRET_KEY}
##      - EDGE_PORT=${S3_PORT}
##    volumes:
##      - localstack-data:/var/lib/localstack
##    networks:
##      - app-network

volumes:
  rabbitmq-data:
