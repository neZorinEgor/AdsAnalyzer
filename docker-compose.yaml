version: "3"

services:
  redis:
    image: redis:8.0-M02-bookworm
    container_name: redis
    env_file:
      - notify/.env
    expose:
      - ${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 3


  auth_mysql:
    image: mysql:9.1.0
    container_name: auth_mysql
    env_file:
      - ./auth/.env
    expose:
      - ${MYSQL_PORT}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 15s
      timeout: 15s
      retries: 4
    depends_on:
      redis:
        condition: service_healthy

  auth:
    container_name: auth
    env_file:
      - ./auth/.env
    build:
      context: auth
      dockerfile: Dockerfile
    command: bash -c "alembic upgrade head && uvicorn src.main:app --host ${APPS_HOST} --port ${AUTH_PORT}"
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    depends_on:
      auth_mysql:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose -O /dev/null --tries=1 http://auth:${AUTH_PORT}/docs || exit 1
      interval: 15s
      timeout: 15s
      retries: 4

  notification:
    container_name: notify
    env_file:
      - notify/.env
    build:
      context: notify
      dockerfile: Dockerfile
    command: bash -c "uvicorn src.main:app --host ${APPS_HOST} --port ${NOTIFICATIONS_PORT}"
    ports:
      - ${NOTIFICATIONS_PORT}:${NOTIFICATIONS_PORT}
    depends_on:
      redis:
        condition: service_healthy

  celery_worker:
    build:
      context: notify
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A src.core.service:celery worker --loglevel=info
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "celery", "-A", "src.core.service:celery", "status" ]
      interval: 10s
      timeout: 10s
      retries: 3

  flower:
    image: mher/flower:2.0
    container_name: flower
    command: celery -A celery flower --basic-auth=${FLOWER_USERNAME}:${FLOWER_PASSWORD} --worker -celery_worker
    volumes:
      - /notify/src/core/service
    restart: always
    ports:
      - ${FLOWER_PORT}:${FLOWER_PORT}
    healthcheck:
      test: [ "CMD", "celery", "-A", "celery", "status" ]
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      CELERY_BROKER_URL: redis://${REDIS_HOST}
      CELERY_RESULT_BACKEND: redis://${REDIS_HOST}
    depends_on:
      celery_worker:
        condition: service_healthy

##  localstack:
##    image: localstack/localstack:latest
##    container_name: localstack
##    env_file:
##      - .env.example
##    ports:
##      - ${S3_PORT}:${S3_PORT}
##    environment:
##      - SERVICES=s3
##      - DEFAULT_REGION=us-east-1
##      - AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY}
##      - AWS_SECRET_ACCESS_KEY=${S3_SECRET_KEY}
##      - EDGE_PORT=${S3_PORT}
##    volumes:
##      - localstack-data:/var/lib/localstack
##    networks:
##      - app-network
