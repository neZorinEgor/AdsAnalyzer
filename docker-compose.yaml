services:
  s3:
    container_name: s3
    image: localstack/localstack:latest
    ports:
      - ${GATEWAY_LISTEN}:${GATEWAY_LISTEN}
    volumes:
      - localstack-data:/var/lib/localstack
    env_file:
      - .env

  redis:
    image: redis:8.0-M02-bookworm
    container_name: redis
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 15s
      timeout: 15s
      retries: 4
    depends_on:
      redis:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181  
      ZOOKEEPER_TICK_TIME: 2000     
    ports:
      - 2181:2181  

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper  
    ports:
      - 9092:9092  
    hostname: kafka  
    environment:
      KAFKA_BROKER_ID: 1  
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092  
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT  
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT  
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2  # Фактор репликации для топика смещений.

volumes:
  localstack-data:
